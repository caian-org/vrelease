name: build

on:
  push:
    branches:
      - master
    tags:
      - "v*"
    paths-ignore:
      - "**.md"
  pull_request:
    branches:
      - "*"
    tags:
      - "*"
    paths-ignore:
      - "**.md"

jobs:
  multi-os:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout to vrelease
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Pre-build steps
        run: |
          gem install bundler
          brew install upx
        if: ${{ matrix.os == 'macos-latest' }}

      - name: Setup Nim
        uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: '1.6.0'

      - name: Compile vrelease
        run: make release

      - name: After build run
        run: |
          ./vrelease

      - name: Rename artifact
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            export ARTIFACT="vrelease-${GITHUB_SHA}-linux"
          fi

          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            export ARTIFACT="vrelease-${GITHUB_SHA}-macos"
          fi

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            export ARTIFACT="vrelease-${GITHUB_SHA}-windows.exe"
          fi

          mv vrelease "$ARTIFACT"

          ls -lash
          echo "::set-env name=ARTIFACT::${ARTIFACT}"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: "${{ env.ARTIFACT }}"
          path: "${{ env.ARTIFACT }}"
          retention-days: 1

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to vrelease
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build image
        run: docker build -t vrelease .

      - name: After build run
        run: |
          docker run --rm vrelease
